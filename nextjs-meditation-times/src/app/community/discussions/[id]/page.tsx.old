// @ts-expect-error "idkwhy"
import { notFound } from 'next/navigation'
import ReplyCard from '@/components/ReplyCard'
import ReplyForm from '@/components/ReplyForm'
import type { Metadata } from 'next'
import { getDiscussionById } from '@/lib/sanity/queries'

// Minimal type definitions
/*interface Discussion {
  _id: string
  title: string
  content: string
  authorName: string
  createdAt: string
  replies?: {
    _id: string
    content: string
    authorName: string
    createdAt: string
  }[]
}*/

export async function generateMetadata({ params }: { params: { id: string } }): Promise<Metadata> {
  const discussion = await getDiscussionById(params.id)
  return {
    title: discussion?.title || 'Discussion',
    description: discussion?.content?.substring(0, 100) || ''
  }
}

export default async function DiscussionPage({ params }: { params: { id: string } }) {
  const discussion = await getDiscussionById(params.id)
  if (!discussion) notFound()

  return (
    <div className="max-w-4xl mx-auto p-4">
      <h1 className="text-2xl font-bold">{discussion.title}</h1>
      <p className="text-gray-500">By {discussion.authorName}</p>
      
      <div className="my-6 whitespace-pre-line">
        {discussion.content}
      </div>

      <section className="mt-8">
        <h2 className="text-xl font-semibold mb-4">Replies ({discussion.replies?.length || 0})</h2>
        {discussion.replies?.length ? (
          discussion.replies.map(reply => (
            <ReplyCard 
              key={reply._id}
              content={reply.content}
              authorName={reply.authorName}
              createdAt={reply.createdAt}
            />
          ))
        ) : (
          <p className="text-gray-500">No replies yet</p>
        )}
      </section>

      <ReplyForm discussionId={discussion._id} />
    </div>
  )
}